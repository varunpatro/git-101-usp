==== Section 1: Command Line

mkdir[directory-name]
	make new folder with name [directory-name]

ls
	displays a list of files and folders in the current folder

cd [directory-name]
	go into [directory-name]

touch [file.extension]
	creates a new file with name [file.extension]

cat [filename]
	displays the contents of the file with

pwd
	displays the current working directory

ctrl + L
	clears the terminal


==== Section 2: Basic Git
$ git config --global user.name "Yan Jean"
$ git config --global user.email "laiyanjean@gmail.com"
$ git config --global --add color.ui true

git init
	initialize a new git repository

git status
	tells us the status of our working directory
	{compares wooden box and current box}
	{whatever is not in wooden box is shown in red}
	{red: difference between wooden and cardboard box}
	{whatever is in your staging area but not in repository}
	{green: difference between wooden and metal box}
	{working tree clean: everything in metal box}

	#git tracks changes as well

git add
	tells git to start tracking a file
	{move stuff from working directory to the wooden box}

git commit -m "MESSAGE"
	commit changes to the repository
	{move stuff from wooden box to metal box}
	{whatever is in green should}
	"MESSAGE" is to tell you the reason for committing

escape + :q!
	quit git commit without saving

git diff
	everything not in the wooden box
	{see what was changed}

git log
	shows us all the commits that you have made
	{history of changes of your project}

git log --oneline
	shows us all the commits in one line

==== Git Summary

Commit:
<finalise changes in the repository>

Basic git workflow:
	1. Change {putting stuff into cardboard box}
	2. Stage (Add) 
	3. Finalize (Commit) {a commit is also a noun representing a final change to the file}

git checkout master

git log --all

git reset master

git is a version control, with each version identified by an ID

==== Section 3: Time travelling and multiverse
git checkout [commit-id]
	switches workspace to the version at that commit-id



==== Section 4: Git
git push

git clone <link>


